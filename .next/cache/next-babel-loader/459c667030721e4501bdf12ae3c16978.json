{"ast":null,"code":"var _jsxFileName = \"D:\\\\Python\\\\intern\\\\reglog1\\\\pages\\\\post.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport Head from 'next/head';\n\nconst post = () => {\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState('');\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault(); //call api\n\n    fetch('/api/auth_post', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        description\n      })\n    }).then(r => {\n      return r.json();\n    }).then(data => {\n      if (data && data.error) {\n        setLoginError(data.message);\n      }\n\n      if (data && data.token) {\n        //set cookie\n        cookie.set('token', data.token, {\n          expires: 2\n        });\n        Router.push('/');\n      }\n    });\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, \"Post Your Comment\")), __jsx(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Title\", __jsx(\"input\", {\n    name: \"title\",\n    type: \"text\",\n    required: \"true\",\n    value: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Description\", __jsx(\"input\", {\n    name: \"description\",\n    type: \"text\",\n    required: \"true\",\n    value: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), loginError && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }\n  }, loginError));\n};\n\nexport default post;","map":{"version":3,"sources":["D:/Python/intern/reglog1/pages/post.js"],"names":["React","useState","Router","cookie","Head","post","loginError","setLoginError","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","data","error","message","token","set","expires","push","text","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Router from 'next/router';\r\nimport cookie from 'js-cookie';\r\nimport Head from 'next/head'\r\n\r\nconst post = () => {\r\n  const [loginError, setLoginError] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    //call api\r\n    fetch('/api/auth_post', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        description,\r\n      }),\r\n    })\r\n      .then((r) => {\r\n        return r.json();\r\n      })\r\n      .then((data) => {\r\n        if (data && data.error) {\r\n          setLoginError(data.message);\r\n        }\r\n        if (data && data.token) {\r\n          //set cookie\r\n          cookie.set('token', data.token, {expires: 2});\r\n          Router.push('/');\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <p><b>Post Your Comment</b></p>\r\n      <label htmlFor=\"title\">\r\n        Title\r\n      <input\r\n        name=\"title\"\r\n        type=\"text\"\r\n        required=\"true\"\r\n        value={text}\r\n      />\r\n      </label>\r\n\r\n      <br />\r\n      <label htmlFor=\"description\">\r\n        Description\r\n      <input\r\n        name=\"description\"\r\n        type=\"text\"\r\n        required=\"true\"\r\n        value={text}\r\n      />\r\n      </label>\r\n      <br />\r\n      <input type=\"submit\" value=\"Post\" />\r\n      {loginError && <p style={{color: 'red'}}>{loginError}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default post;\r\n"]},"metadata":{},"sourceType":"module"}